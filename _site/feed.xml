<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-04-09T18:48:30+03:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">New Cubes Blog</title><subtitle>A blog featuring interactive 3D visualizations</subtitle><entry><title type="html">Welcome to New Cubes Blog</title><link href="http://localhost:4000/blog/2024/04/09/welcome-to-new-cubes-blog/" rel="alternate" type="text/html" title="Welcome to New Cubes Blog" /><published>2024-04-09T00:00:00+03:00</published><updated>2024-04-09T00:00:00+03:00</updated><id>http://localhost:4000/blog/2024/04/09/welcome-to-new-cubes-blog</id><content type="html" xml:base="http://localhost:4000/blog/2024/04/09/welcome-to-new-cubes-blog/"><![CDATA[<p>Welcome to the New Cubes Blog! This is a demonstration of how blog posts work with our Three.js visualization.</p>

<h2 id="about-this-blog">About This Blog</h2>

<p>This blog combines interactive 3D visualizations with written content. The main page features an interactive Three.js visualization of floating cubes, while the blog section contains detailed articles about various topics.</p>

<h2 id="features">Features</h2>

<ul>
  <li>Interactive 3D visualization on the main page</li>
  <li>Clean, modern design</li>
  <li>Responsive layout</li>
  <li>Markdown-based blog posts</li>
</ul>

<h2 id="getting-started">Getting Started</h2>

<p>To create your own blog post:</p>

<ol>
  <li>Create a new Markdown file in the <code class="language-plaintext highlighter-rouge">_posts</code> directory</li>
  <li>Use the front matter format shown above</li>
  <li>Write your content in Markdown format</li>
  <li>Add any images to the <code class="language-plaintext highlighter-rouge">assets</code> directory</li>
</ol>

<h2 id="code-example">Code Example</h2>

<p>Hereâ€™s a simple example of how the Three.js visualization works:</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="o">*</span> <span class="nx">as</span> <span class="nx">THREE</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">three</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">scene</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nc">Scene</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">camera</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nc">PerspectiveCamera</span><span class="p">(</span><span class="mi">75</span><span class="p">,</span> <span class="nb">window</span><span class="p">.</span><span class="nx">innerWidth</span> <span class="o">/</span> <span class="nb">window</span><span class="p">.</span><span class="nx">innerHeight</span><span class="p">,</span> <span class="mf">0.1</span><span class="p">,</span> <span class="mi">1000</span><span class="p">);</span>
<span class="kd">const</span> <span class="nx">renderer</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nc">WebGLRenderer</span><span class="p">();</span>

<span class="c1">// Add your 3D objects here</span>
<span class="kd">const</span> <span class="nx">geometry</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nc">BoxGeometry</span><span class="p">();</span>
<span class="kd">const</span> <span class="nx">material</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nc">MeshBasicMaterial</span><span class="p">({</span> <span class="na">color</span><span class="p">:</span> <span class="mh">0x00ff00</span> <span class="p">});</span>
<span class="kd">const</span> <span class="nx">cube</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">THREE</span><span class="p">.</span><span class="nc">Mesh</span><span class="p">(</span><span class="nx">geometry</span><span class="p">,</span> <span class="nx">material</span><span class="p">);</span>
<span class="nx">scene</span><span class="p">.</span><span class="nf">add</span><span class="p">(</span><span class="nx">cube</span><span class="p">);</span>
</code></pre></div></div>

<p>Stay tuned for more posts about Three.js, web development, and interactive visualizations!</p>]]></content><author><name></name></author><summary type="html"><![CDATA[Welcome to the New Cubes Blog! This is a demonstration of how blog posts work with our Three.js visualization.]]></summary></entry></feed>